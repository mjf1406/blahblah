import{c as re,a as T,b as le,u as G,r,j as e,B as x,M as de,t as c}from"./index-bjD2Wxva.js";import{D as H,a as ce,b as P,c as $,d as L,L as l,I as C}from"./label-BfUWol79.js";import{u as oe,P as he,C as pe,a as xe,b as me,S as ue,A as ge,c as je,T as ve,d as ye,e as fe,f as Me,g as we,h as Ne,i as Se,j as Ce,B as Q,k as De}from"./usePersistsedQuery-Bw8aV3mj.js";import{T as U,S as D,a as b,b as _,c as O,d as t}from"./select-aoAjomkU.js";import"./index-CV-pcOgz.js";/**
 * @license lucide-react v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const be=[["rect",{width:"18",height:"18",x:"3",y:"3",rx:"2",key:"afitv7"}],["path",{d:"M3 9h18",key:"1pudct"}],["path",{d:"M3 15h18",key:"5xshup"}],["path",{d:"M9 3v18",key:"fh3hqa"}],["path",{d:"M15 3v18",key:"14nvp0"}]],_e=re("grid-3x3",be);function We(){const{data:z=[]}=oe(T.maps.list,"maps-list"),k=le(T.worlds.list)||[],J=G(T.maps.create),K=G(T.maps.update),X=G(T.maps.remove),[Y,A]=r.useState(!1),[Z,I]=r.useState(!1),[W,E]=r.useState(null),[m,u]=r.useState(""),[F,g]=r.useState(""),[j,v]=r.useState(""),[y,f]=r.useState("none"),[d,h]=r.useState({width:0,height:0}),[M,w]=r.useState("none"),[N,S]=r.useState([]),[V,B]=r.useState(new Set);r.useEffect(()=>{if(z.length>0&&N.length>0){const s=N.filter(i=>!z.some(a=>a.name===i.name&&a.description===i.description&&a.type===i.type));s.length!==N.length&&S(s)}},[z,N]);const q=r.useMemo(()=>[...z.filter(i=>!V.has(i._id)).map(i=>({...i,isOptimistic:!1})),...N].sort((i,a)=>a._creationTime-i._creationTime),[z,N,V]),R=()=>{u(""),g(""),v(""),f("none"),h({width:0,height:0}),w("none")},ee=async s=>{if(s.preventDefault(),!m.trim()){c.error("Map name is required");return}if(!j){c.error("Map type is required");return}const i={name:m.trim(),description:F.trim(),type:j,gridSize:y==="none"?void 0:y,dimensions:d.width>0&&d.height>0?d:void 0,worldId:M==="none"?void 0:M},a={_id:`temp-${Date.now()}`,name:i.name,description:i.description,type:i.type,gridSize:i.gridSize,dimensions:i.dimensions,worldId:i.worldId,_creationTime:Date.now(),isOptimistic:!0};S(p=>[a,...p]),R(),A(!1),c.success("Map created successfully!");try{await J(i)}catch{S(p=>p.filter(n=>n._id!==a._id)),c.error("Failed to create map"),u(i.name),g(i.description),v(i.type),f(i.gridSize||"none"),h(i.dimensions||{width:0,height:0}),w(i.worldId||"none"),A(!0)}},se=async s=>{if(s.preventDefault(),!W)return;if(!m.trim()){c.error("Map name is required");return}if(!j){c.error("Map type is required");return}const i={name:m.trim(),description:F.trim(),type:j,gridSize:y==="none"?void 0:y,dimensions:d.width>0&&d.height>0?d:void 0,worldId:M==="none"?void 0:M},a=W,p={_id:`temp-edit-${W._id}-${Date.now()}`,name:i.name,description:i.description,type:i.type,gridSize:i.gridSize,dimensions:i.dimensions,worldId:i.worldId,_creationTime:W._creationTime,isOptimistic:!0};B(n=>new Set(n).add(a._id)),S(n=>[p,...n]),R(),E(null),I(!1),c.success("Map updated successfully!");try{await K({id:a._id,name:i.name,description:i.description,type:i.type,gridSize:i.gridSize,dimensions:i.dimensions,worldId:i.worldId}),S(n=>n.filter(o=>o._id!==p._id)),B(n=>{const o=new Set(n);return o.delete(a._id),o})}catch{S(n=>n.filter(o=>o._id!==p._id)),B(n=>{const o=new Set(n);return o.delete(a._id),o}),c.error("Failed to update map"),E(a),u(i.name),g(i.description),v(i.type),f(i.gridSize||"none"),h(i.dimensions||{width:0,height:0}),w(i.worldId||"none"),I(!0)}},ie=s=>{E(s),u(s.name),g(s.description),v(s.type),f(s.gridSize||"none"),h(s.dimensions||{width:0,height:0}),w(s.worldId||"none"),I(!0)},te=async s=>{try{await X({id:s}),c.success("Map deleted successfully!")}catch{c.error("Failed to delete map")}},ae=s=>{switch(s){case"Battle Map":return"bg-red-100 text-red-800";case"World Map":return"bg-blue-100 text-blue-800";case"Dungeon Map":return"bg-purple-100 text-purple-800";case"City Map":return"bg-green-100 text-green-800";case"Regional Map":return"bg-yellow-100 text-yellow-800";default:return"bg-gray-100 text-gray-800"}},ne=s=>{const i=k.find(a=>a._id===s);return(i==null?void 0:i.name)||"Unknown World"};return e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsx("h1",{className:"text-3xl font-bold",children:"Maps"}),e.jsxs(H,{open:Y,onOpenChange:A,children:[e.jsx(ce,{asChild:!0,children:e.jsxs(x,{children:[e.jsx(he,{className:"w-4 h-4 mr-2"}),"Add Map"]})}),e.jsxs(P,{className:"sm:max-w-2xl max-h-[90vh] overflow-y-auto",children:[e.jsx($,{children:e.jsx(L,{children:"Create New Map"})}),e.jsxs("form",{onSubmit:s=>void ee(s),className:"space-y-4",children:[e.jsxs("div",{children:[e.jsx(l,{htmlFor:"name",children:"Map Name"}),e.jsx(C,{id:"name",value:m,onChange:s=>u(s.target.value),placeholder:"Enter map name"})]}),e.jsxs("div",{children:[e.jsx(l,{htmlFor:"description",children:"Description"}),e.jsx(U,{id:"description",value:F,onChange:s=>g(s.target.value),placeholder:"Describe the map...",rows:3})]}),e.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[e.jsxs("div",{children:[e.jsx(l,{htmlFor:"type",children:"Map Type"}),e.jsxs(D,{value:j,onValueChange:v,children:[e.jsx(b,{children:e.jsx(_,{placeholder:"Select type"})}),e.jsxs(O,{children:[e.jsx(t,{value:"Battle Map",children:"Battle Map"}),e.jsx(t,{value:"World Map",children:"World Map"}),e.jsx(t,{value:"Dungeon Map",children:"Dungeon Map"}),e.jsx(t,{value:"City Map",children:"City Map"}),e.jsx(t,{value:"Regional Map",children:"Regional Map"}),e.jsx(t,{value:"Other",children:"Other"})]})]})]}),e.jsxs("div",{children:[e.jsx(l,{htmlFor:"gridSize",children:"Grid Size (Optional)"}),e.jsxs(D,{value:y,onValueChange:f,children:[e.jsx(b,{children:e.jsx(_,{placeholder:"Select grid size"})}),e.jsxs(O,{children:[e.jsx(t,{value:"none",children:"No Grid"}),e.jsx(t,{value:"5ft",children:"5 feet"}),e.jsx(t,{value:"10ft",children:"10 feet"}),e.jsx(t,{value:"1 mile",children:"1 mile"}),e.jsx(t,{value:"10 miles",children:"10 miles"})]})]})]})]}),e.jsxs("div",{children:[e.jsx(l,{children:"Dimensions (Optional)"}),e.jsxs("div",{className:"grid grid-cols-2 gap-2 mt-1",children:[e.jsx(C,{type:"number",placeholder:"Width",value:d.width||"",onChange:s=>h(i=>({...i,width:parseInt(s.target.value)||0}))}),e.jsx(C,{type:"number",placeholder:"Height",value:d.height||"",onChange:s=>h(i=>({...i,height:parseInt(s.target.value)||0}))})]})]}),e.jsxs("div",{children:[e.jsx(l,{htmlFor:"world",children:"Associated World (Optional)"}),e.jsxs(D,{value:M,onValueChange:w,children:[e.jsx(b,{children:e.jsx(_,{placeholder:"Select world"})}),e.jsxs(O,{children:[e.jsx(t,{value:"none",children:"No World"}),k.map(s=>e.jsx(t,{value:s._id,children:s.name},s._id))]})]})]}),e.jsxs("div",{className:"flex gap-2 pt-4",children:[e.jsx(x,{type:"button",variant:"outline",onClick:()=>A(!1),className:"flex-1",children:"Cancel"}),e.jsx(x,{type:"submit",className:"flex-1",children:"Create Map"})]})]})]})]}),e.jsx(H,{open:Z,onOpenChange:I,children:e.jsxs(P,{className:"sm:max-w-2xl max-h-[90vh] overflow-y-auto",children:[e.jsx($,{children:e.jsx(L,{children:"Edit Map"})}),e.jsxs("form",{onSubmit:s=>void se(s),className:"space-y-4",children:[e.jsxs("div",{children:[e.jsx(l,{htmlFor:"editName",children:"Map Name"}),e.jsx(C,{id:"editName",value:m,onChange:s=>u(s.target.value),placeholder:"Enter map name"})]}),e.jsxs("div",{children:[e.jsx(l,{htmlFor:"editDescription",children:"Description"}),e.jsx(U,{id:"editDescription",value:F,onChange:s=>g(s.target.value),placeholder:"Describe the map...",rows:3})]}),e.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[e.jsxs("div",{children:[e.jsx(l,{htmlFor:"editType",children:"Map Type"}),e.jsxs(D,{value:j,onValueChange:v,children:[e.jsx(b,{children:e.jsx(_,{placeholder:"Select type"})}),e.jsxs(O,{children:[e.jsx(t,{value:"Battle Map",children:"Battle Map"}),e.jsx(t,{value:"World Map",children:"World Map"}),e.jsx(t,{value:"Dungeon Map",children:"Dungeon Map"}),e.jsx(t,{value:"City Map",children:"City Map"}),e.jsx(t,{value:"Regional Map",children:"Regional Map"}),e.jsx(t,{value:"Other",children:"Other"})]})]})]}),e.jsxs("div",{children:[e.jsx(l,{htmlFor:"editGridSize",children:"Grid Size (Optional)"}),e.jsxs(D,{value:y,onValueChange:f,children:[e.jsx(b,{children:e.jsx(_,{placeholder:"Select grid size"})}),e.jsxs(O,{children:[e.jsx(t,{value:"none",children:"No Grid"}),e.jsx(t,{value:"5ft",children:"5 feet"}),e.jsx(t,{value:"10ft",children:"10 feet"}),e.jsx(t,{value:"1 mile",children:"1 mile"}),e.jsx(t,{value:"10 miles",children:"10 miles"})]})]})]})]}),e.jsxs("div",{children:[e.jsx(l,{children:"Dimensions (Optional)"}),e.jsxs("div",{className:"grid grid-cols-2 gap-2 mt-1",children:[e.jsx(C,{type:"number",placeholder:"Width",value:d.width||"",onChange:s=>h(i=>({...i,width:parseInt(s.target.value)||0}))}),e.jsx(C,{type:"number",placeholder:"Height",value:d.height||"",onChange:s=>h(i=>({...i,height:parseInt(s.target.value)||0}))})]})]}),e.jsxs("div",{children:[e.jsx(l,{htmlFor:"editWorld",children:"Associated World (Optional)"}),e.jsxs(D,{value:M,onValueChange:w,children:[e.jsx(b,{children:e.jsx(_,{placeholder:"Select world"})}),e.jsxs(O,{children:[e.jsx(t,{value:"none",children:"No World"}),k.map(s=>e.jsx(t,{value:s._id,children:s.name},s._id))]})]})]}),e.jsxs("div",{className:"flex gap-2 pt-4",children:[e.jsx(x,{type:"button",variant:"outline",onClick:()=>I(!1),className:"flex-1",children:"Cancel"}),e.jsx(x,{type:"submit",className:"flex-1",children:"Update Map"})]})]})]})})]}),q.length===0?e.jsxs("div",{className:"py-12 text-center",children:[e.jsx(de,{className:"w-16 h-16 mx-auto mb-4 text-gray-400"}),e.jsx("p",{className:"text-lg text-gray-500",children:"No maps created yet"}),e.jsx("p",{className:"text-gray-400",children:'Click "Add Map" to get started'})]}):e.jsx("div",{className:"grid gap-4 md:grid-cols-2 lg:grid-cols-3",children:q.map(s=>e.jsxs(pe,{className:`hover:shadow-md transition-shadow ${s.isOptimistic?"opacity-70 animate-pulse":""}`,children:[e.jsxs(xe,{className:"relative",children:[e.jsxs("div",{className:"flex items-start justify-between",children:[e.jsxs(me,{className:"flex items-center gap-2 pr-8 text-lg",children:[s.name,s.isOptimistic&&e.jsx("span",{className:"px-2 py-1 text-xs rounded text-muted-foreground bg-muted",children:"Saving..."})]}),!s.isOptimistic&&e.jsxs("div",{className:"absolute flex gap-1 top-4 right-4",children:[e.jsx(x,{variant:"ghost",size:"sm",onClick:()=>ie(s),className:"w-8 h-8 p-0 hover:bg-gray-100",children:e.jsx(ue,{className:"w-4 h-4"})}),e.jsxs(ge,{children:[e.jsx(je,{asChild:!0,children:e.jsx(x,{variant:"ghost",size:"sm",className:"w-8 h-8 p-0 hover:bg-red-100 hover:text-red-600",children:e.jsx(ve,{className:"w-4 h-4"})})}),e.jsxs(ye,{children:[e.jsxs(fe,{children:[e.jsx(Me,{children:"Delete Map"}),e.jsxs(we,{children:['Are you sure you want to delete "',s.name,'"? This action cannot be undone.']})]}),e.jsxs(Ne,{children:[e.jsx(Se,{children:"Cancel"}),e.jsx(Ce,{onClick:()=>void te(s._id),className:"bg-red-600 hover:bg-red-700",children:"Delete"})]})]})]})]})]}),e.jsxs("div",{className:"flex flex-wrap items-center gap-2",children:[e.jsx(Q,{className:ae(s.type),children:s.type}),s.gridSize&&e.jsxs(Q,{variant:"outline",className:"flex items-center gap-1",children:[e.jsx(_e,{className:"w-3 h-3"}),s.gridSize]})]})]}),e.jsx(De,{children:e.jsxs("div",{className:"space-y-3",children:[s.description&&e.jsx("p",{className:"text-sm text-gray-600",children:s.description}),e.jsxs("div",{className:"space-y-2",children:[s.dimensions&&e.jsxs("div",{className:"text-xs text-gray-500",children:[e.jsx("span",{className:"font-medium",children:"Dimensions:"})," ",s.dimensions.width," ×"," ",s.dimensions.height]}),s.worldId&&e.jsxs("div",{className:"text-xs text-gray-500",children:[e.jsx("span",{className:"font-medium",children:"World:"})," ",ne(s.worldId)]})]})]})})]},s._id))})]})}export{We as MapManager};
